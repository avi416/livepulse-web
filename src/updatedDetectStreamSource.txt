// עדכון מלא לפונקציית detectStreamSource שיש לשלב בקובץ WatchStream.tsx

const detectStreamSource = (videoElement: HTMLVideoElement) => {
  if (!videoElement) return;
  
  console.log('🔍 בודק מקור הסטרים לפי פרופורציות');
  
  // המתן עד שיש מידע על גודל הוידאו
  const checkVideoSize = () => {
    const { videoWidth, videoHeight } = videoElement;
    
    if (videoWidth && videoHeight) {
      const ratio = videoWidth / videoHeight;
      console.log(`📏 יחס וידאו: ${ratio} (${videoWidth}x${videoHeight})`);
      
      // קביעת מקור הסטרים לפי היחס המדויק שהוגדר
      // לרוחב - יחס 1.2 ומעלה
      if (ratio >= 1.2) {
        videoElement.setAttribute('data-source', 'landscape');
        console.log('🖥️ זיהוי מקור: סטרים לרוחב (landscape)');
        
        // עדכן את המיכל
        if (containerRef.current) {
          const container = containerRef.current.querySelector('.tiktok-video-container');
          if (container) {
            container.setAttribute('data-ratio', 'landscape');
          }
        }
      } 
      // אנכי - יחס 0.9 ומטה
      else if (ratio <= 0.9) {
        videoElement.setAttribute('data-source', 'mobile');
        console.log('📱 זיהוי מקור: סטרים לאורך (portrait)');
        
        // עדכן את המיכל
        if (containerRef.current) {
          const container = containerRef.current.querySelector('.tiktok-video-container');
          if (container) {
            container.setAttribute('data-ratio', 'portrait');
          }
        }
      } 
      // ריבועי - בין 0.9 ל-1.2
      else {
        videoElement.setAttribute('data-source', 'square');
        console.log('🔲 זיהוי מקור: סטרים ריבועי (square)');
        
        // עדכן את המיכל
        if (containerRef.current) {
          const container = containerRef.current.querySelector('.tiktok-video-container');
          if (container) {
            container.setAttribute('data-ratio', 'square');
          }
        }
      }
    }
  };
  
  // בדוק מיד ואחר כך בעת טעינת מטא-דאטה
  checkVideoSize();
  videoElement.addEventListener('loadedmetadata', checkVideoSize);
};
